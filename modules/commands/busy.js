module.exports.config = {
    name: 'busy',
    version: '10.02',
    hasPermssion: 0,
    credits: 'DC-Nam',
    description: 'T·ª± th√¥ng b√°o b·∫°n ƒëang b·∫≠n khi c√≥ ng∆∞·ªùi tag',
    commandCategory: 'Ti·ªán √≠ch',
    usages: '[]',
    cooldowns: 3
};
const {
    readFileSync,
    writeFileSync,
    existsSync
} = require('fs-extra')
dest = __dirname + '/cache/b·∫≠n.json',
convertTime = a => new Date(a).toLocaleString();
module.exports.onLoad = function() {
    if (!existsSync(dest)) writeFileSync(dest, '{}');
};
module.exports.handleEvent = async function({
    api, event
}) {
const moment = require("moment-timezone");
  const timeNow = moment.tz("Asia/Ho_Chi_Minh").format("HH:mm:ss");
    const out = (a, b, c) => api.sendMessage(`${a}`, event.threadID, c?c: null, b?event.messageID: null),
    data = JSON.parse(readFileSync(dest)),
    tags = Object.keys(event.mentions !== undefined ? event.mentions : {} ),
    now = Date.now(),
    z = data[event.senderID];
    if (!!z) {
        if (z.timeEnd < now){
           await out(`‚Üí Ch√†o m·ª´ng b·∫°n ƒë√£ quay tr·ªü l·∫°i`, true);
            out(z.dataTags.length == 0 ? '‚Üí Kh√¥ng ai nh·∫Øc ƒë·∫øn b·∫°n trong l√∫c b·∫°n v·∫Øng m·∫∑t': `== [ ùóóùóîùó°ùóõ ùó¶ùóîÃÅùóñùóõ ùóßùóîùóö ] ==\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí c√≥ ${z.dataTags.length} ng∆∞·ªùi nh·∫Øc ƒë·∫øn b·∫°n\n${z.dataTags.map((i, c) => `${c+1}. Ng∆∞·ªùi D√πng: ${global.data.userName.get(i.id)}\n‚ÜíFACEBOOK: https://www.facebook.com/profile.php?id=${i.id}\n‚Üí Th·ªùi Gian: ${convertTime(i.time)}\n‚Üí T·∫°i Nh√≥m: ${global.data.threadInfo.get(i.idT).threadName}\n‚Üí N·ªôi Dung: ${i.msg}\n`).join('\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n')}`, false);
        };
          z.timeEnd = now+(z.delay*(60*1000));
    };
    if (tags.length != 0) tags.forEach(i => {
        const x = data[i];
        if (!!x && x.timeEnd < now) {
            x.dataTags.push({
                id: event.senderID,
                idT: event.threadID,
                msg: event.body,
                time: Date.now()+25200000
            });
            out(`‚Üí Hi·ªán t·∫°i ng∆∞·ªùi d√πng ƒëang b·∫≠t ch·∫ø ƒë·ªô kh√¥ng l√†m phi·ªÅn v·ªõi l√≠ do: ${x.msg}\n‚Üí T∆∞∆°ng t√°c l·∫ßn cu·ªëi: ${convertTime((x.timeEnd-(x.delay*(60*1000)))+25200000)}`, true);
        };
    });
    writeFileSync(dest, JSON.stringify(data, 0, 4));
};
module.exports.run = function({
    api, event, args
}) {
    try {
        const out = (a, b, c) => api.sendMessage(`${a}`, event.threadID, c?c: null, b?event.messageID: null),
        data = JSON.parse(readFileSync(dest));
        if (!!args[0]) {
            const str = args.join(' '),
            arg = str.split('&'),
            msg = arg[0],
            delay = arg[1];
            if (!msg || !delay || isNaN(delay)) return out(!!delay&&isNaN(delay) ? '‚Üí Th·ªùi gian b·∫°n nh·∫≠p ph·∫£i l√† m·ªôt con s·ªë':`‚Üí Vui l√≤ng nh·∫≠p theo ƒë·ªãnh d·∫°ng: N·ªôi dung & Th·ªùi gian ( ph√∫t )`, true);
            data[event.senderID] = {
                delay,
                timeEnd: Date.now()+(delay*(60*1000)),
                msg,
                dataTags: []
            };
            out(`‚Üí ƒê√£ thi·∫øt l·∫≠p th√†nh c√¥ng l√≠ do: ${msg}\n‚Üí T·ª± ƒë·ªông k√≠ch ho·∫°t sau ${delay%60} ph√∫t kh√¥ng t∆∞∆°ng t√°c`, true);
        } else {
            if (!data[event.senderID]) return out(`‚Üí B·∫°n ch∆∞a thi·∫øt l·∫≠p ch·∫ø ƒë·ªô busy`, true);
            out(`‚Üí Xo√° th√†nh c√¥ng thi·∫øt l·∫≠p: ${this.config.name}`, true);
            delete data[event.senderID];
        };
        writeFileSync(dest, JSON.stringify(data, 0, 4));
    }catch(err) {
        out(err, true);
    }
};